name: Python CI

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main

jobs:
  ruff_and_pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies for example tests
        run: |
          uv pip install --system -e .[dev]

      - name: Check code formatting with ruff
        run: ruff format --check .
      - name: Lint code with ruff
        run: ruff check .

      - name: Run example usage
        run: |
          cd examples/
          ./example_usage.py

      - name: Run example pytests(easy)
        run: |
          cd examples/
          pytest -v -s -m "simple_process_test and easy" tests/
      - name: Run example pytests(hard)
        run: |
          cd examples/
          pytest -v -s -m "simple_process_test and hard" tests/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Remove the previous docker container
        run: docker rm -f example_app || true

      # Use Docker Compose for container-based tests
      - name: Build docker containers
        working-directory: ./examples
        run: docker compose build

      - name: Run docker tests (from outside)
        working-directory: ./examples
        run: pytest -v -s -m "docker_test" tests/

      - name: Run docker tests (from inside)
        working-directory: ./examples
        run: |
          docker compose run --rm example-app pytest -v -s -m docker_inner_test tests/

      # Run device tests in container
      - name: Run serial device pytests
        working-directory: ./examples
        run: docker compose run --rm example-app bash scripts/run_device_test.sh

      # TODO: Investigate how to do testing on GitHub Actions regarding SSH.
